int fibonacci(int n){
	int c; 
	int fn; 
	int fmenos;	
	c = 1;	
	fn = 1;	
	fmenos = 0;	
	while(c<n){
			int aux;
			aux = fmenos;
			fmenos = fn;
			fn = fn + aux;
			c = c + 1;
	}	
	return fn;
}
void main(void){
	output(fibonacci(5));
}

(goto, main, , )
(fun, input, , )
(system_in, val, , )
(asn_ret, val, , )
(end_fun, , , )
(fun, output, , )
(pop_param, val, , )
(system_out, val, , )
(end_fun, , , )
(fun, fibonacci, , )
(pop_param, n, , )
(asn, c, 1, )
(asn, fn, 1, )
(asn, fmenos, 0, )
(label, _l0, , )
(if_l, c, n, _l1)
(goto, _l2, , )
(label, _l1, , )
(asn, aux, fmenos, )
(asn, fmenos, fn, )
(+, fn, fn, aux)
(+, c, c, 1)
(goto, _l0, , )
(label, _l2, , )
(asn_ret, fn, , )
(end_fun, , , )
(fun, main, , )
(param, 5, , )
(jal, fibonacci, , )
(catch_return, _t0, , )
(param, _t0, , )
(jal, output, , )
(end_fun, , , )
(end, , , )

int var[10];
int fibo( int n ){
	if(n==0){
		return 0;
	}	
	else{
		if(n==1){
			return 1;
		}		
		else{
			return fibo(n-1) + fibo(n-2);
		}		
		output(2);	
	}	
	output(1);
}
void main(void){
	int x[5];	
	int a;	
	output(fibo(5));
}

(goto, main, , )
(fun, input, , )
(system_in, val, , )
(asn_ret, val, , )
(end_fun, , , )
(fun, output, , )
(pop_param, val, , )
(system_out, val, , )
(end_fun, , , )
(fun, fibo, , )
(pop_param, n, , )
(if_e, n, 0, _l0)
(goto, _l1, , )
(label, _l0, , )
(asn_ret, 0, , )
(goto, _l2, , )
(label, _l1, , )
(if_e, n, 1, _l3)
(goto, _l4, , )
(label, _l3, , )
(asn_ret, 1, , )
(goto, _l5, , )
(label, _l4, , )
(-, _t0, n, 1)
(param, _t0, , )
(jal, fibo, , )
(catch_return, _t1, , )
(-, _t2, n, 2)
(param, _t2, , )
(jal, fibo, , )
(catch_return, _t3, , )
(+, _t4, _t1, _t3)
(asn_ret, _t4, , )
(label, _l5, , )
(param, 2, , )
(jal, output, , )
(label, _l2, , )
(param, 1, , )
(jal, output, , )
(end_fun, , , )
(fun, main, , )
(param, 5, , )
(jal, fibo, , )
(catch_return, _t0, , )
(param, _t0, , )
(jal, output, , )
(end_fun, , , )
(end, , , )

int gcd(int u, int v){
	if(v==0){
		return u;
	}
	else{
		return gcd(v, u-u/v*v);
	}
}
void main(void){
	int x; 
	int y;	
	x = input(); 
	y = input();	
	output(gcd(x, y));
}

(goto, main, , )
(fun, input, , )
(system_in, val, , )
(asn_ret, val, , )
(end_fun, , , )
(fun, output, , )
(pop_param, val, , )
(system_out, val, , )
(end_fun, , , )
(fun, gcd, , )
(pop_param, v, , )
(pop_param, u, , )
(if_e, v, 0, _l0)
(goto, _l1, , )
(label, _l0, , )
(asn_ret, u, , )
(goto, _l2, , )
(label, _l1, , )
(param, v, , )
(/, _t0, u, v)
(*, _t1, _t0, v)
(-, _t2, u, _t1)
(param, _t2, , )
(jal, gcd, , )
(catch_return,_t3, , )
(asn_ret, _t3, , )
(label, _l2, , )
(end_fun, , , )
(fun, main, , )
(jal, input, , )
(catch_return, x, , )
(jal, input, , )
(catch_return, y, , )
(param, x, , )
(param, y, , )
(jal, gcd, , )
(catch_return, _t0, , )
(param, _t0, , )
(jal, output, , )
(end_fun, , , )
(end, , , )
